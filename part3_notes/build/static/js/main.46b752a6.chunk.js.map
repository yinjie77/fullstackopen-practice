{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/NoteServer.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","filter","FilterPerson","map","x","name","number","PersonForm","onSubmit","submit","namechange","value","newName","numberchange","type","Persons","persons","Delete","onClick","baseurl","all","getAll","axios","get","then","response","data","create","noteObject","post","update","id","put","delete","Notification","message","className","App","useState","setPersons","setNewName","newNumber","setNumber","setFilterPerson","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","NoteServer","event","target","person","toLowerCase","indexOf","preventDefault","includes","a","newObject","window","confirm","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46b752a6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter=(props)=>{\r\n    return(\r\n        <>\r\n        filter shown with <input onChange={props.filter} />\r\n        {\r\n       props.FilterPerson.map(x=><div key={x.number}>{x.name} {x.number}</div>)\r\n        }\r\n        </>\r\n    )\r\n \r\n}\r\nexport default Filter\r\n\r\n","import React from 'react'\r\nconst PersonForm=(props)=>{\r\n    return(\r\n        <>\r\n        <form onSubmit={props.submit}>\r\n        <div>\r\n          name: <input onChange={props.namechange} value={props.newName}/>\r\n        </div>\r\n        <div>\r\n          number: <input onChange={props.numberchange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" >add</button>\r\n        </div>\r\n      </form>\r\n        </>\r\n    )\r\n}\r\nexport default PersonForm","import React from \"react\";\r\n// import NoteServer from '../services/NoteServer'\r\nconst Persons=({persons,Delete})=>{\r\n    return(\r\n        <>\r\n    {  \r\n      persons.map(x=><div key={x.name}>{x.name} {x.number} <button onClick={()=>Delete(x)}>delete</button></div>)\r\n    }\r\n        </>\r\n    )\r\n}\r\nexport default Persons","import axios from \"axios\";\r\nconst baseurl='http://localhost:3001/api/persons'\r\n\r\nconst getAll=()=>{\r\n    const request=axios.get(baseurl)\r\n    return request.then(response=>response.data)\r\n}\r\nconst create=(noteObject)=>{\r\n    const request=axios.post(baseurl,noteObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst update=(id,noteObject)=>{\r\n    const request=axios.put(`${baseurl}/${id}`,noteObject)\r\n    return request.then(response=>response.data)\r\n}\r\nconst Delete=(id)=>{\r\n    const request=axios.delete(`${baseurl}/${id}`)\r\n    return request.then(response=>response.data)\r\n}\r\nconst all={getAll,create,update,Delete}\r\n\r\nexport default all","import React from \"react\";\r\n\r\nconst Notification=({message,className})=>{\r\n    if(message===null)\r\n    return null\r\n\r\n    return(\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import React, { useState,useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport NoteServer from './services/NoteServer'\nimport Notification from './components/Notification'\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNumber ] = useState('')\n  const [ FilterPerson,setFilterPerson]=useState([])\n  const [successMessage,setSuccessMessage]=useState(null)\n  const [errorMessage,setErrorMessage]=useState(null)\n  useEffect(()=>{\n    NoteServer\n    .getAll()\n    .then(response=>{\n      // console.log(response)\n      setPersons(response)\n    })\n  },[])\n  const submit=(event)=>{\n   \n    event.preventDefault()\n    // console.log( (persons.map(x=>x.name)))\n    // console.log( newName)\n    \n     if(persons.map(x=>x.name).includes(newName))\n     {\n      const a=persons.map(x=>x.name).indexOf(newName)\n      const id=persons[a].id\n      \n      const newObject={\n        name:newName,\n        number:newNumber\n      }\n      if(window.confirm(`${newName} is already added to phonebook,replace the old number with a new one`))\n      {\n        NoteServer\n        .update(id,newObject)\n        .then(response=>setPersons(persons.map(x=>x.id!==response.id?x:response)))\n        .then(()=>{\n          setSuccessMessage(`${newName}'s phone number has been changed to ${newNumber} `)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 3000);\n        })\n        .catch(error=>{\n          setErrorMessage(`${newName} has already been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000);\n        })\n        setPersons(persons.filter(x=>x.id!==id))\n      }\n     }\n     \n     else\n     {\n      // setPersons(persons.concat({name:newName,number:newNumber}))\n      const noteObject={\n        name:newName,\n        number:newNumber\n      }\n      NoteServer\n      .create(noteObject)\n      .then(response=>{\n        // console.log(response)\n        setPersons(persons.concat(response))\n      })\n      .then(()=>{\n        setSuccessMessage(`Added ${newName}`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 3000);\n      })\n     }\n      \n    \n  }\n  const namechange=(event)=>{\n    setNewName(event.target.value)\n  }\n  const numberchange=(event)=>{\n    setNumber(event.target.value)\n  }\n  const filter=(event)=>{\n    if(event.target.value==='')\n    {setFilterPerson([])}\n    else\n    setFilterPerson(persons.filter(person=>person.name.toLowerCase().indexOf(event.target.value.toLowerCase())!==-1))\n\n  }\n  const Delete=(x)=>{\n    if(window.confirm(`Delete ${x.name}`))\n    {\n        NoteServer\n        .Delete(x.id)\n        .then(()=>{\n          NoteServer\n          .getAll()\n          .then(response=>setPersons(response))\n        })\n        \n    }\n}\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} className={'success'}/>\n      <Notification message={errorMessage} className={'error'}/>\n      <Filter filter={filter} FilterPerson={FilterPerson}/>\n      <h2>add a new</h2>\n      <PersonForm submit={submit} namechange={namechange} numberchange={numberchange} newName={newName}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} Delete={Delete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n   <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}